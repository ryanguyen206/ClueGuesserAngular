{"ast":null,"code":"import _asyncToGenerator from \"/home/bcuser/Documents/GitHub/ClueGuesserAngular/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { PUZZLEWORDS } from '../wordlist';\nimport { Puzzle } from '../Puzzle';\nimport { shuffle } from '../Shuffle';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\n\nfunction PuzzleCreationGridComponent_h2_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h2\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const word_r1 = ctx.$implicit;\n    i0.ɵɵclassMap(word_r1.answerClass);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(word_r1.name);\n  }\n}\n\nexport class PuzzleCreationGridComponent {\n  constructor() {\n    this.orderedWords = PUZZLEWORDS;\n    this.selectedWords = shuffle(this.orderedWords).splice(1, 25);\n    this.puzzle = new Puzzle(this.selectedWords);\n  }\n\n  ngOnInit() {}\n\n  submitClue() {\n    return _asyncToGenerator(function* () {\n      const puzzle = {\n        id: '2367',\n        user: 'account',\n        cardComponents: [],\n        numberOfCorrectAnswers: 4\n      };\n\n      try {\n        const response = yield fetch('http://localhost:3000/puzzlecreation', {\n          method: 'POST',\n          headers: {\n            'Content-Type': 'application/json'\n          },\n          body: JSON.stringify(puzzle)\n        });\n      } catch (error) {\n        console.error('Error:', error);\n      }\n    })();\n  }\n\n}\n\nPuzzleCreationGridComponent.ɵfac = function PuzzleCreationGridComponent_Factory(t) {\n  return new (t || PuzzleCreationGridComponent)();\n};\n\nPuzzleCreationGridComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: PuzzleCreationGridComponent,\n  selectors: [[\"app-puzzle-creation-grid\"]],\n  decls: 5,\n  vars: 1,\n  consts: [[1, \"flex-container\"], [1, \"grid\"], [3, \"class\", 4, \"ngFor\", \"ngForOf\"], [\"id\", \"submitButton\", \"onclick\", \"submitClue()\"]],\n  template: function PuzzleCreationGridComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0)(1, \"div\", 1);\n      i0.ɵɵtemplate(2, PuzzleCreationGridComponent_h2_2_Template, 2, 4, \"h2\", 2);\n      i0.ɵɵelementEnd();\n      i0.ɵɵelementStart(3, \"button\", 3);\n      i0.ɵɵtext(4, \"Submit\");\n      i0.ɵɵelementEnd()();\n    }\n\n    if (rf & 2) {\n      i0.ɵɵadvance(2);\n      i0.ɵɵproperty(\"ngForOf\", ctx.puzzle.cardComponents);\n    }\n  },\n  dependencies: [i1.NgForOf],\n  styles: [\".flex-container[_ngcontent-%COMP%]\\n{\\n    display: flex;\\n    flex-direction: row;\\n    justify-content: center;\\n    align-items: center;\\n}\\n\\n.grid[_ngcontent-%COMP%]{\\n    display: grid;\\n    grid-template-columns: repeat(5, 0fr);\\n    margin: 0 auto;\\n}\\n\\nh2[_ngcontent-%COMP%]\\n{\\n    text-align: center;\\n    padding: 50px;\\n    margin: 5px;\\n    min-width: 250px;\\n}\\n\\n.bomb[_ngcontent-%COMP%]{\\n    background-color: #b2b7be;\\n}\\n\\n.incorrect[_ngcontent-%COMP%]{\\n    background-color: #f23f43;\\n}\\n\\n.correct[_ngcontent-%COMP%]{\\n    background-color: #23a559;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInB1enpsZS1jcmVhdGlvbi1ncmlkLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0lBRUksYUFBYTtJQUNiLG1CQUFtQjtJQUNuQix1QkFBdUI7SUFDdkIsbUJBQW1CO0FBQ3ZCOztBQUVBO0lBQ0ksYUFBYTtJQUNiLHFDQUFxQztJQUNyQyxjQUFjO0FBQ2xCOztBQUVBOztJQUVJLGtCQUFrQjtJQUNsQixhQUFhO0lBQ2IsV0FBVztJQUNYLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3Qjs7QUFFQTtJQUNJLHlCQUF5QjtBQUM3QiIsImZpbGUiOiJwdXp6bGUtY3JlYXRpb24tZ3JpZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmZsZXgtY29udGFpbmVyXG57XG4gICAgZGlzcGxheTogZmxleDtcbiAgICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG59XG5cbi5ncmlke1xuICAgIGRpc3BsYXk6IGdyaWQ7XG4gICAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQoNSwgMGZyKTtcbiAgICBtYXJnaW46IDAgYXV0bztcbn1cblxuaDJcbntcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXI7XG4gICAgcGFkZGluZzogNTBweDtcbiAgICBtYXJnaW46IDVweDtcbiAgICBtaW4td2lkdGg6IDI1MHB4O1xufVxuXG4uYm9tYntcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiAjYjJiN2JlO1xufVxuXG4uaW5jb3JyZWN0e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICNmMjNmNDM7XG59XG5cbi5jb3JyZWN0e1xuICAgIGJhY2tncm91bmQtY29sb3I6ICMyM2E1NTk7XG59XG5cbiJdfQ== */\"]\n});","map":{"version":3,"mappings":";AACA,SAAQA,WAAR,QAA0B,aAA1B;AACA,SAASC,MAAT,QAAuB,WAAvB;AACA,SAASC,OAAT,QAAwB,YAAxB;;;;;;ICDQC;IAA0EA;IAAaA;;;;;IAAxCA;IAA2BA;IAAAA;;;;ADUlF,OAAM,MAAOC,2BAAP,CAAkC;EAEtCC;IAEA,oBAAeL,WAAf;IACA,qBAAgBE,OAAO,CAAC,KAAKI,YAAN,CAAP,CAA2BC,MAA3B,CAAkC,CAAlC,EAAqC,EAArC,CAAhB;IACA,cAAS,IAAIN,MAAJ,CAAW,KAAKO,aAAhB,CAAT;EAJiB;;EAMjBC,QAAQ,IACP;;EAEKC,UAAU;IAAA;MACd,MAAMC,MAAM,GAAG;QACbC,EAAE,EAAE,MADS;QAEbC,IAAI,EAAE,SAFO;QAGbC,cAAc,EAAE,EAHH;QAIbC,sBAAsB,EAAE;MAJX,CAAf;;MASA,IAAG;QACD,MAAMC,QAAQ,SAASC,KAAK,CAAC,sCAAD,EAAyC;UACnEC,MAAM,EAAE,MAD2D;UAEnEC,OAAO,EAAE;YACP,gBAAgB;UADT,CAF0D;UAKnEC,IAAI,EAAEC,IAAI,CAACC,SAAL,CAAeX,MAAf;QAL6D,CAAzC,CAA5B;MASD,CAVD,CAWA,OAAMY,KAAN,EAAY;QACVC,OAAO,CAACD,KAAR,CAAc,QAAd,EAAwBA,KAAxB;MACD;IAvBa;EAyBf;;AApCqC;;;mBAA3BnB;AAA2B;;;QAA3BA;EAA2BqB;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCZxC1B,+BAA4B,CAA5B,EAA4B,KAA5B,EAA4B,CAA5B;MAEQA;MACJA;MACAA;MAAiDA;MAAMA;;;;MAF9BA;MAAAA","names":["PUZZLEWORDS","Puzzle","shuffle","i0","PuzzleCreationGridComponent","constructor","orderedWords","splice","selectedWords","ngOnInit","submitClue","puzzle","id","user","cardComponents","numberOfCorrectAnswers","response","fetch","method","headers","body","JSON","stringify","error","console","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["/home/bcuser/Documents/GitHub/ClueGuesserAngular/src/app/puzzle-creation-grid/puzzle-creation-grid.component.ts","/home/bcuser/Documents/GitHub/ClueGuesserAngular/src/app/puzzle-creation-grid/puzzle-creation-grid.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport {PUZZLEWORDS} from '../wordlist';\nimport { Puzzle } from '../Puzzle';\nimport { shuffle } from '../Shuffle';\nimport {HttpClient, HttpHeaders} from '@angular/common/http';\nimport {Observable, of} from 'rxjs';\n\n@Component({\n  selector: 'app-puzzle-creation-grid',\n  templateUrl: './puzzle-creation-grid.component.html',\n  styleUrls: ['./puzzle-creation-grid.component.css']\n})\nexport class PuzzleCreationGridComponent implements OnInit {\n\n  constructor() { }\n\n  orderedWords = PUZZLEWORDS;\n  selectedWords = shuffle(this.orderedWords).splice(1, 25);\n  puzzle = new Puzzle(this.selectedWords);\n\n  ngOnInit(): void {\n  }\n\n  async submitClue() {\n    const puzzle = { \n      id: '2367',\n      user: 'account',\n      cardComponents: [],\n      numberOfCorrectAnswers: 4\n\n\n    }\n\n    try{\n      const response = await fetch('http://localhost:3000/puzzlecreation', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(puzzle)\n\n      });\n\n    }\n    catch(error){\n      console.error('Error:', error);\n    }\n\n  }\n}\n","<div class=\"flex-container\">\n    <div class=\"grid\">\n        <h2 *ngFor=\"let word of puzzle.cardComponents\" class={{word.answerClass}}>{{word.name}}</h2>\n    </div>\n    <button id=\"submitButton\" onclick=\"submitClue()\">Submit</button>\n\n    \n</div>\n"]},"metadata":{},"sourceType":"module"}