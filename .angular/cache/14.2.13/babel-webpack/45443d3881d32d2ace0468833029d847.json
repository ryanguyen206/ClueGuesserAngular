{"ast":null,"code":"import { WORDS } from '../mock-words';\nimport { WordClass } from '../word';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"@angular/common\";\n\nfunction HomeComponent_h2_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"h2\", 4);\n    i0.ɵɵlistener(\"click\", function HomeComponent_h2_4_Template_h2_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r5);\n      const word_r3 = restoredCtx.$implicit;\n      const ctx_r4 = i0.ɵɵnextContext();\n      return i0.ɵɵresetView(ctx_r4.checkWord(word_r3));\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const word_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"ngClass\", word_r3.selected ? word_r3.answerClass : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", word_r3.name, \" \");\n  }\n}\n\nfunction HomeComponent_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"Correct!\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction HomeComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1, \"Incorrect. Try again.\");\n    i0.ɵɵelementEnd();\n  }\n}\n\nexport let HomeComponent = /*#__PURE__*/(() => {\n  class HomeComponent {\n    constructor(http) {\n      this.http = http;\n      this.words = WORDS;\n      this.correctWords = [];\n      this.incorrectWords = [];\n      this.bombWord = [];\n      this.clue = 'Animal';\n      this.isCorrect = null;\n      this.isIncorrect = null;\n      this.isBomb = null;\n      this.selectedWord = null;\n      this.numberOfCorrectWords = 0;\n      this.numberOfIncorrectGuessesRemaining = 0;\n      this.numberOfCorrectGuessesRemaining = 0;\n      this.isGameOver = false;\n      this.isLogedIn = false;\n      this.puzzleID = \"override\";\n      this.isWinner = 0;\n      this.selectCorrectWords();\n      this.words = [];\n      this.clue = '';\n      this.http.get('https://clueguessernodeserver.azurewebsites.net/puzzle').subscribe( // this.http.get<any>('http://localhost:3000/puzzle').subscribe(\n      response => {\n        let mongoPuzzle = response[Math.floor(Math.random() * response.length)];\n        this.puzzleID = mongoPuzzle._id;\n        this.clue = mongoPuzzle.clue;\n        this.numberOfCorrectGuessesRemaining = mongoPuzzle.answerKey.length - 1;\n        this.numberOfCorrectWords = this.numberOfCorrectGuessesRemaining;\n        this.numberOfIncorrectGuessesRemaining = this.numberOfCorrectGuessesRemaining;\n\n        for (let i = 0; i < mongoPuzzle.cards.length; i++) {\n          this.words.push(new WordClass(mongoPuzzle.cards[i], \"incorrect\"));\n        }\n\n        for (let i = 0; i < mongoPuzzle.answerKey.length; i++) {\n          if (i == 0) {\n            this.words[mongoPuzzle.answerKey[i]].answerClass = \"bomb\";\n          } else {\n            this.words[mongoPuzzle.answerKey[i]].answerClass = \"correct\";\n          }\n        }\n      }, error => {\n        console.error('GET request error:', error);\n      });\n    }\n\n    selectCorrectWords() {\n      this.correctWords = this.words.filter(word => word.answerClass === 'correct');\n      this.numberOfIncorrectGuessesRemaining = this.correctWords.length;\n      this.numberOfCorrectGuessesRemaining = this.correctWords.length;\n    }\n\n    checkWord(word) {\n      if (!this.isGameOver && !word.selected && this.numberOfIncorrectGuessesRemaining > 0) {\n        word.selected = true;\n\n        if (word.answerClass === 'correct') {\n          this.numberOfCorrectGuessesRemaining--;\n        } else if (word.answerClass === 'incorrect') {\n          this.numberOfIncorrectGuessesRemaining--;\n        } else if (word.answerClass === 'bomb') {\n          this.numberOfIncorrectGuessesRemaining = 0;\n        }\n      }\n\n      if (this.numberOfIncorrectGuessesRemaining == 0) {\n        let scoreToUpdate = (this.numberOfCorrectWords - this.numberOfCorrectGuessesRemaining) * 25;\n        this.isGameOver = true;\n        this.endGame(scoreToUpdate);\n      } else if (this.numberOfCorrectGuessesRemaining == 0) {\n        let scoreToUpdate = this.numberOfCorrectWords * 25;\n        this.isGameOver = true;\n        this.isWinner = 1;\n        this.endGame(scoreToUpdate);\n      }\n    }\n\n    endGame(score) {\n      for (let i = 0; i < this.words.length; i++) {\n        this.words[i].selected = true;\n      }\n\n      this.updateScores(score);\n    }\n\n    updateScores(score) {\n      const email = sessionStorage.getItem(\"Email:\");\n      const dataToUpdate = {\n        scoreToUpdate: score,\n        email: email,\n        puzzleID: this.puzzleID,\n        isWinner: this.isWinner\n      };\n      this.http.put('https://clueguessernodeserver.azurewebsites.net/users', dataToUpdate).subscribe(response => {\n        // this.http.put<any>('http://localhost:3000/users', dataToUpdate).subscribe((response) => {\n        console.log('PUT request successful:', response);\n      }, error => {\n        console.error('PUT request error:', error);\n      });\n    }\n\n  }\n\n  HomeComponent.ɵfac = function HomeComponent_Factory(t) {\n    return new (t || HomeComponent)(i0.ɵɵdirectiveInject(i1.HttpClient));\n  };\n\n  HomeComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HomeComponent,\n    selectors: [[\"app-home\"]],\n    decls: 7,\n    vars: 6,\n    consts: [[1, \"flex-container\"], [1, \"grid\"], [3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"correctorincorrect\", 4, \"ngIf\"], [3, \"ngClass\", \"click\"], [1, \"correctorincorrect\"]],\n    template: function HomeComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"p\");\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 1);\n        i0.ɵɵtemplate(4, HomeComponent_h2_4_Template, 2, 2, \"h2\", 2);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(5, HomeComponent_div_5_Template, 2, 0, \"div\", 3);\n        i0.ɵɵtemplate(6, HomeComponent_div_6_Template, 2, 0, \"div\", 3);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate3(\"Clue: \", ctx.clue, \" \\u00A0 Incorrect Guesses Remaining: \", ctx.numberOfIncorrectGuessesRemaining, \" \\u00A0 Correct Guesses Remaining: \", ctx.numberOfCorrectGuessesRemaining, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.words);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCorrect === true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isCorrect === false);\n      }\n    },\n    dependencies: [i2.NgClass, i2.NgForOf, i2.NgIf],\n    styles: [\".flex-container[_ngcontent-%COMP%]{display:flex;flex-direction:column;justify-content:center;align-items:center}.grid[_ngcontent-%COMP%]{display:grid;grid-template-columns:repeat(5,0fr);margin:0 auto}.selected[_ngcontent-%COMP%]{background-color:green;color:#fff;transition:background-color .3s,color .3s}.correct[_ngcontent-%COMP%]{background-color:#23a559;color:#fff;transition:background-color .5s}.incorrect[_ngcontent-%COMP%]{background-color:#f23f43;color:#fff;transition:background-color .5s}.bomb[_ngcontent-%COMP%]{background-color:#b2b7be;color:#fff;transition:background-color .5s}\"]\n  });\n  return HomeComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}